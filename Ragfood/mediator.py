"""The Mediator Pattern implementation for Ragfood"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_Mediator.ipynb.

# %% auto 0
__all__ = ['Colleague', 'Mediator']

# %% ../nbs/01_Mediator.ipynb 3
class Colleague:
    """Base class for colleagues in the mediator pattern."""
    
    def __init__(self, mediator):
        self.mediator = mediator
    
    def changed(self, event, state, *argc, **argv):
        """Notify the mediator of a change."""
        if self.mediator:
            self.mediator.notify(self, event, state, *argc, **argv)
        else:
            print('<<no mediator>>', event, state, argc, argv)

# %% ../nbs/01_Mediator.ipynb 4
class Mediator:
    """Base mediator class that coordinates communication between colleagues."""
    
    def notify(self, colleague, event, state, *argc, **argv):
        """Handle notifications from colleagues."""
        raise NotImplementedError
